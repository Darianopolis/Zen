### Core

- ✅ Update build
   - ✅ Add wayland protocol generation python script
   - ✅ Move to CMake project
   - ✅ Build wlroots separately / use system package
   - ✅ Convert to C++
- ✅ Basic shortcuts
   - ✅ Add "spawn" helper
   - ✅ Switch MOD between Super/Alt if running standalone/nested
   - ✅ MOD + T = Launching konsole
   - ✅ MOD + D = Launching fuzzel/wofi
   - ✅ MOD + Q = Closing focused window
- ✅ Compositor authority for move/size
   - ✅ MOD + LeftClick  - Move
   - ✅ MOD + RightClick - Size
   - ✅ Remove client requested move/size operations
- ✅ Enable viewporter protocol
- ✅ Ensure that xwayland-satellite is sufficient for running Steam
- ✅ Add drag support
   - ✅ Add drag icon/source support
   - ✅ Send mouse events to last clicked window when pressed
- ✅ Fullscreen support
- ️✅ Basic window zone snapping logic
- ✅ Server decorations
   - ✅ Add decoration manager to tell clients to prefer server side decorations
   - ✅ Add thin border around windows
- ✅ Minimal multi display configuration
- Improved pointer handling
   - Add pointer constraint protocol
   - Relative cursor motion protocol
   - Cursor hiding
- Shell layers
   - Add multiple strata levels
   - Add layer shell protocol
- Add XWayland integration
   - Cursor size difference over X11 windows

### Bugs

- Minecraft, GIMP
   - [wayland] Data too big for buffer (X + Y > 4096)<br>
     [wayland] error in client communication (pid Z)
- SDL3/GLFW + Vulkan (AMD)
   - Occasional OUT-OF-DATE when resizing at extremely high frame rate (14k+fps). Appears to be a Vulkan WSI bug
      - Currently tested only with separate render thread. Need to test with syncronous rendering and other drivers
- BeamNG + VSync-disabled + wlroots DRM Backend
   - Stuttery presentation but high framerate
   - Stutters go away if
      - Ran in nested compositor (TESTED: nested xwayland-satellite AND gamescope)
      - Ran in standalone Niri with same xwayland-satellite binary
      - Ran with VSync enabled
   - Stutters also present in
      - Native Vulkan binary, Proton Vulkan mode, Proton DirectX11 mode
      - DWL with direct XWayland integration

### Additional

- Debug options
   - WLR_SCENE_DEBUG_DAMAGE_HIGHLIGHT
- Remove wlr_primary_selection_v1_device_manager_create?
- Add IPC with messaging client
   - Spawn message
- Scaling
   - xdg_output_manager_v1
- Spawn child clients in center of parent
   - xdg_foreign support
- Idle protocol
- ✅ Compositor initiated fullscreen toggle
- ✅ Throttle resize requests
- Consolidate interaction logic
   - Rename `input.cpp` -> `seat.cpp`
   - Move input binding logic to `interaction.cpp`
   - Replace `cursor_mode` with `interaction_state`
   - Separate zoning logic from zone interaction binds
- Improved zone logic
   - Have toplevels remember what zones edges they are constrained to
   - Readjust all toplevel zone constraint on workspace/output configuration change
- Shortcut to grab all input back from any clients and ignore any constraints
- Media control keybinds
- Numlock default state
- ✅ Improved window list/search/cycling
   - ✅ MOD + MouseScroll - Cycle through toplevels under mouse cursor
- Output management
   - Dynamic output removal/creation/configuration
   - Output scaling
   - wlr_output_configuration_v1 protocol?
- wlr_screencast

### Portals

- File chooser
- Screencast portal
- Screenshotting
- Application Theming

### Code cleanup

- ✅ Use new/delete instead of calloc/free
- ✅ Use dynamic wl_listener warpper
- ✅ Rename structures and drop `struct` prefix?
- ✅ Replace wl_list/wl_array with standard containers
- Unified C++ format based logging
